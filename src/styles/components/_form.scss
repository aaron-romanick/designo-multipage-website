@use '/src/styles/abstracts/mixins/media-queries' as media-queries;

.contact {
  &__form {
    display: flex;
    flex-direction: column;
    gap: var(--size-30);
    width: 100%;

    @include media-queries.size(desktop) {
      --flow-space: 0;
      
      grid-column: 2;
      grid-row: 1 / 3;
    }
  }

  &__control {
    position: relative;

    &::after {
      background-color: var(--clr-white);
      bottom: 0;
      content: "";
      height: var(--size-px);
      left: 0;
      position: absolute;
      width: 100%;
    }

    &:focus-within,
    &:hover {

      &::after {
        transform: scaleY(3);
      }
    }
  }

  &__input,
  &__textarea {
    background-color: transparent;
    border: none;
    color: var(--clr-white);
    padding: var(--size-30);
    width: 100%;

    &::placeholder {
      color: var(--clr-white-transparent-50);
      opacity: 1;
    }

    &:focus-visible,
    &:hover {
      outline-offset: var(--size-10);

      &::placeholder {
        color: var(--clr-white);
      }
    }
  }

  &__textarea {
    height: var(--size-280);
    min-height: var(--size-140);
    resize: vertical;
  }

  &__error {
    align-items: center;
    display: none;
    gap: var(--size-20);
    font-size: var(--fs-xs);
    font-style: italic;
    position: absolute;
    right: 0.75rem;
    top: 50%;
    transform: translateY(-50%);

    @at-root :where(.contact__input, .contact__textarea)[data-has-error="true"] ~ & {
      display: flex;
    }
  }

  &__button {
    align-self: center;
    margin-block-start: var(--size-70);

    @include media-queries.size(tablet) {
      align-self: end;
    }

    &:disabled {
      cursor: not-allowed;
      opacity: 0.4;
    }
  }
}

.error {

  &__icon {
    height: var(--size-50);
  }
}